/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Restaurants;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author ghinc
 */
public class MenuOrder extends javax.swing.JInternalFrame {
Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    /**
     * Creates new form Page1
     */
    public MenuOrder() {
        initComponents();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        
        jTable1.getTableHeader().setFont(new Font("Segoe UI",Font.BOLD,12));
        jTable1.getTableHeader().setOpaque(false);
        jTable1.getTableHeader().setBackground(new Color(0,0,255));
        jTable1.getTableHeader().setForeground(new Color(0,0,0));
        jTable1.setRowHeight(25);
        showTableData();
        this.getContentPane().setBackground( new Color(255,255,153) );
        
        
         jTable2.setBackground(new Color(0,0,0,0));
        ((DefaultTableCellRenderer)jTable2.getDefaultRenderer(Object.class)).setBackground(new Color(0,0,0,0));
        jTable2.setGridColor(Color.BLACK);
        jTable2.setForeground(Color.BLACK);
        jScrollPane2.setBackground(new Color(0,0,0,0));
        jScrollPane2.setOpaque(false);
        jTable2.setOpaque(false);
        //((DefaultTableCellRenderer)jTable2.getDefaultRenderer(Object.class)).setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        jTable2.setShowGrid(true);
    }

    public void showTableData(){
        try{
             con = DriverManager.getConnection("jdbc:mysql://localhost/logindb","root","");
             String sql= "SELECT * FROM meniu";
             pst=con.prepareStatement(sql);
             rs=pst.executeQuery();
             jTable1.setModel(DbUtils.resultSetToTableModel(rs));
       }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        Cantitate = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        total = new javax.swing.JButton();
        confirm = new javax.swing.JButton();
        jpret = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setFocusable(false);
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable1.setSelectionBackground(new java.awt.Color(255, 0, 51));
        jTable1.setShowVerticalLines(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Restaurants/images/meniu.png"))); // NOI18N

        jTable2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nr", "Nume", "Cantitate", "Pret"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setGridColor(new java.awt.Color(255, 255, 255));
        jTable2.setSelectionBackground(new java.awt.Color(255, 0, 51));
        jTable2.setShowVerticalLines(false);
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Restaurants/images/comanda.png"))); // NOI18N

        Cantitate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Cantitate.setForeground(new java.awt.Color(153, 153, 153));
        Cantitate.setText("Cantitate");
        Cantitate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CantitateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CantitateFocusLost(evt);
            }
        });
        Cantitate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantitateActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(255, 255, 153));
        add.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Restaurants/images/icons8-add-24.png"))); // NOI18N
        add.setText("Adauga la comanda");
        add.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add.setBorderPainted(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 153));
        delete.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Restaurants/images/icons8-delete-24 (1).png"))); // NOI18N
        delete.setText("Sterge din comanda");
        delete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        delete.setBorderPainted(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        total.setBackground(new java.awt.Color(255, 255, 153));
        total.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        total.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Restaurants/images/icons8-expensive-price-30.png"))); // NOI18N
        total.setText("Genereaza pretul");
        total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        total.setBorderPainted(false);
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        confirm.setBackground(new java.awt.Color(255, 255, 153));
        confirm.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        confirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Restaurants/images/icons8-check-circle-24.png"))); // NOI18N
        confirm.setText("Confirma comanda");
        confirm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        confirm.setBorderPainted(false);
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        jpret.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jpret.setForeground(new java.awt.Color(153, 153, 153));
        jpret.setText("Pretul comenzii");
        jpret.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jpretFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpretFocusLost(evt);
            }
        });
        jpret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpretActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Cantitate, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jpret)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cantitate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpret, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(54, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CantitateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantitateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CantitateActionPerformed

    private void CantitateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CantitateFocusGained
        // TODO add your handling code here:
        if(Cantitate.getText().equals("Cantitate")){
            Cantitate.setText("");
            Cantitate.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_CantitateFocusGained

    private void CantitateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CantitateFocusLost
        if(Cantitate.getText().equals("")){
            Cantitate.setText("Cantitate");
            Cantitate.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_CantitateFocusLost

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
         DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
        
        if(jTable2.getSelectedRowCount() == 1){
            tblModel.removeRow(jTable2.getSelectedRow());
        }else{
            if(jTable2.getRowCount() == 0)
            {
                JOptionPane.showMessageDialog(this,"Comanda dumneavoastra este goala");
            }
            else{
                JOptionPane.showMessageDialog(this,"Selectati produsul pe care doriti sa il stergeti!");
                
            }
        }
        
    }//GEN-LAST:event_deleteActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
         getSum();
         jpret.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_totalActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        // TODO add your handling code here:
        /*
        Object[] options = {"Acasa",
                    "Restaurant"
                    };
int n = JOptionPane.showOptionDialog(this,//parent container of JOptionPane
    "Unde doriti sa serviti comanda?",
    "Serve",
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,//do not use a custom Icon
    options,//the titles of buttons
    options[1]);//default button title
if(n==JOptionPane.YES_OPTION)
{
    HomeDelivery ghincea=new HomeDelivery();
    ghincea.setVisible(true);
    
    
}else if(n == JOptionPane.NO_OPTION){
    Table ghincea=new Table();
    ghincea.setVisible(true);
}else if (n== JOptionPane.CLOSED_OPTION){
    JOptionPane.showMessageDialog(this,"Selectati una din cele doua variante!");
}
*/

 try{
            
            con = DriverManager.getConnection("jdbc:mysql://localhost/logindb","root","");
            String sql = "INSERT INTO orders"
                    + "( pret)"
                    + "VALUES (?)";
             pst = con.prepareStatement(sql);
            pst.setString(1,String.valueOf(jpret.getText()));
            
            pst.executeUpdate();
           
            
            
        }
        catch(Exception ex){
             JOptionPane.showMessageDialog(null,ex);
        }
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
        if(tblModel.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"Nu ati comandat nimic!");
            
        }else{
            
            String nr,nume,cantitate,pret;
            try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/logindb","root","");
           for(int i=0;i<tblModel.getRowCount();i++){
               nr=tblModel.getValueAt(i,0).toString();
               nume=tblModel.getValueAt(i,1).toString();
               cantitate=tblModel.getValueAt(i,2).toString();
               pret=tblModel.getValueAt(i,3).toString();
               
               String query="INSERT INTO comenzi( numeprodus, cantitate, pret) VALUES (?,?,?)";
               pst = con.prepareStatement(query);
            
            pst.setString(1,nume);
            pst.setString(2,cantitate);
            pst.setString(3,pret);
            pst.executeUpdate();
               
           }
           tblModel.setRowCount(0);
           
            JOptionPane.showMessageDialog(this,"Multumim ca ne-ati ales!");
            
        }
        catch(Exception ex){
             JOptionPane.showMessageDialog(null,ex);
          }
        }
            
        
    }//GEN-LAST:event_confirmActionPerformed
int i=1,tot;
  String Prodname,price;
  int flag=0;
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if(flag == 0 || Cantitate.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Selectati produsul si introduceti cantitatea! ");
        }
        else{
        Vector v =new Vector();
        v.add(i);
        v.add(Prodname);
        v.add(Cantitate.getText());
        v.add(Integer.valueOf(price)*Integer.valueOf(Cantitate.getText()));
        DefaultTableModel dt =  (DefaultTableModel)jTable2.getModel();
        dt.addRow(v);
        i++;
        
    }//GEN-LAST:event_addActionPerformed

        
        
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int index = jTable1.getSelectedRow();
      
        Prodname=model.getValueAt(index, 1).toString();
        price = model.getValueAt(index, 2).toString();
        flag=1;
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jpretFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpretFocusGained
         if(jpret.getText().equals("Pretul comenzii")){
            jpret.setText("");
            jpret.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_jpretFocusGained

    private void jpretFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpretFocusLost
        if(jpret.getText().equals("")){
            jpret.setText("Pretul comenzii");
            jpret.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_jpretFocusLost

    private void jpretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpretActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpretActionPerformed

    
    public void getSum()
     {
         int sum=0;
         for (int i=0; i< jTable2.getRowCount();i++)
         {
             sum = sum + Integer.parseInt(jTable2.getValueAt(i, 3).toString());
         }
         jpret.setText(Integer.toString(sum));
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cantitate;
    private javax.swing.JButton add;
    private javax.swing.JButton confirm;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jpret;
    private javax.swing.JButton total;
    // End of variables declaration//GEN-END:variables
}
